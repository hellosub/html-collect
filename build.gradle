/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

buildDir = 'build'

ext {
	javaVersion = '1.8'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile group: 'edu.uci.ics', name: 'crawler4j', version: '4.4.0'
    
    implementation 'com.google.firebase:firebase-admin:6.10.0'

	compile 'javax.mail:mail:1.4.7'    
	// compile 'javax.mail:mail:1.5.4'
}

task runLibrary(type: JavaExec) {
	group "MyCustomTasks"
	main = 'html.collect.Library'
	classpath += sourceSets.main.runtimeClasspath
	args 'Gradle!'
}

jar {
	manifest {
		attributes "Main-Class": 'html.collect.Library'
	}

	from {
		// filters only existing and non-empty dirs
		sourceSets.main.runtimeClasspath
		.filter { (it.isDirectory() && it.listFiles().length > 0) || it.isFile() }
		.collect { it.isDirectory() ? it : zipTree(it) }
	}
}


